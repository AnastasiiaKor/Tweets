{"version":3,"file":"static/js/261.ac33ade6.chunk.js","mappings":"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","sources":["services/api.js","components/UserListItem/UserListItem.jsx","components/UserList/UserList.jsx","components/Dropdown/Dropdown.jsx","pages/Tweets.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://6444295a90738aa7c0807feb.mockapi.io/';\n\nexport async function getUsers() {\n  const response = await axios('tweets-app');\n  return response.data;\n}\n\nexport async function increaseUserFollowers(user) {\n  const response = await axios.put(`tweets-app/${user.id}`, {\n    name: user.name,\n    avatar: user.avatar,\n    followers: user.followers + 1,\n    tweets: user.tweets,\n  });\n  return response.data;\n}\n\nexport async function decreaseUserFollowers(user) {\n  const response = await axios.put(`tweets-app/${user.id}`, {\n    name: user.name,\n    avatar: user.avatar,\n    followers: user.followers - 1,\n    tweets: user.tweets,\n  });\n  return response.data;\n}\n","export default function UserListItem({\n  user,\n  follow,\n  unfollow,\n  followedUsers,\n}) {\n  return (\n    <>\n      <div>\n        <img src={user.avatar} alt={user.name} />\n      </div>\n      <p>{user.name}</p>\n      <p>{user.tweets} Tweets</p>\n      <p> {user.followers.toLocaleString('en-US')} Followers</p>\n      {followedUsers.includes(user.id) ? (\n        <button type=\"button\" onClick={() => unfollow(user)}>\n          Following\n        </button>\n      ) : (\n        <button type=\"button\" onClick={() => follow(user)}>\n          Follow\n        </button>\n      )}\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport {\n  getUsers,\n  increaseUserFollowers,\n  decreaseUserFollowers,\n} from 'services/api';\nimport UserListItem from 'components/UserListItem/UserListItem';\n\nexport default function UserList({ selectedOption }) {\n  const [users, setUsers] = useState([]);\n  const [index, setIndex] = useState(3);\n  const [followedUsersIds, setFollowedUsersIds] = useState(\n    JSON.parse(localStorage.getItem('followedUsersIds')) || []\n  );\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const users = await getUsers();\n        setUsers(users);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetch();\n  }, []);\n\n  useEffect(() => {\n    if (selectedOption === 'all') {\n      setSelectedUsers(users);\n    } else if (selectedOption === 'following') {\n      const filteredUsers = users.filter(user =>\n        followedUsersIds.includes(user.id)\n      );\n      setSelectedUsers(filteredUsers);\n    } else if (selectedOption === 'follow') {\n      const filteredUsers = users.filter(\n        user => !followedUsersIds.includes(user.id)\n      );\n      setSelectedUsers(filteredUsers);\n    }\n  }, [selectedOption, users, followedUsersIds]);\n\n  const visibleUsers = selectedUsers.slice(0, index);\n\n  function loadMore() {\n    setIndex(index + 3);\n  }\n\n  function followUser(user) {\n    const updatedFollowedUsers = [...followedUsersIds, user.id];\n    setFollowedUsersIds(updatedFollowedUsers);\n    localStorage.setItem(\n      'followedUsersIds',\n      JSON.stringify(updatedFollowedUsers)\n    );\n    async function increase(user) {\n      try {\n        const updatedUser = await increaseUserFollowers(user);\n        const idToUpdate = updatedUser.id;\n        const newProps = { followers: updatedUser.followers };\n        updateUser(idToUpdate, newProps);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    increase(user);\n  }\n\n  function unfollowUser(user) {\n    const updatedFollowedUsers = followedUsersIds.filter(id => id !== user.id);\n    setFollowedUsersIds(updatedFollowedUsers);\n    localStorage.setItem(\n      'followedUsersIds',\n      JSON.stringify(updatedFollowedUsers)\n    );\n    async function decrease(user) {\n      try {\n        const updatedUser = await decreaseUserFollowers(user);\n        const idToUpdate = updatedUser.id;\n        const newProps = { followers: updatedUser.followers };\n        updateUser(idToUpdate, newProps);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    decrease(user);\n  }\n\n  function updateUser(id, newProps) {\n    setUsers(users => {\n      return users.map(user => {\n        if (user.id === id) {\n          return { ...user, ...newProps };\n        } else {\n          return user;\n        }\n      });\n    });\n  }\n\n  return (\n    <>\n      <ul>\n        {visibleUsers.map(user => (\n          <li key={user.id}>\n            <UserListItem\n              user={user}\n              follow={followUser}\n              unfollow={unfollowUser}\n              followedUsers={followedUsersIds}\n            />\n          </li>\n        ))}\n      </ul>\n      {visibleUsers.length < selectedUsers.length && (\n        <button type=\"button\" onClick={loadMore}>\n          Load more\n        </button>\n      )}\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport Select from 'react-select';\n\nconst options = [\n  { value: 'all', label: 'all' },\n  { value: 'follow', label: 'follow' },\n  { value: 'following', label: 'following' },\n];\n\nconst defaultOption = { value: 'all', label: 'all' };\n\nconst Dropdown = ({ onChange }) => {\n  const [selectedOption, setSelectedOption] = useState(defaultOption);\n\n  const handleChange = selectedOption => {\n    // console.log(selectedOption.value);\n    setSelectedOption(selectedOption);\n    onChange(selectedOption.value);\n  };\n\n  return (\n    <>\n      <p>Show </p>\n      <Select\n        value={selectedOption}\n        onChange={handleChange}\n        options={options}\n      />\n    </>\n  );\n};\n\nexport default Dropdown;\n","import { NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport UserList from 'components/UserList/UserList';\nimport Dropdown from 'components/Dropdown/Dropdown';\nfunction Tweets() {\n  const [selectedOption, setSelectedOption] = useState('all');\n\n  const handleChange = selectedOption => {\n    setSelectedOption(selectedOption);\n  };\n  return (\n    <>\n      <NavLink to=\"/\">&larr; Go back</NavLink>\n      <p> This is tweets</p>\n      <Dropdown onChange={handleChange} />\n      <UserList selectedOption={selectedOption} />\n    </>\n  );\n}\nexport default Tweets;\n"],"names":["getUsers","axios","response","data","increaseUserFollowers","user","id","name","avatar","followers","tweets","decreaseUserFollowers","UserListItem","follow","unfollow","followedUsers","src","alt","toLocaleString","includes","type","onClick","UserList","selectedOption","useState","users","setUsers","index","setIndex","JSON","parse","localStorage","getItem","followedUsersIds","setFollowedUsersIds","selectedUsers","setSelectedUsers","useEffect","console","log","fetch","filteredUsers","filter","visibleUsers","slice","followUser","updatedFollowedUsers","updatedUser","idToUpdate","newProps","updateUser","setItem","stringify","increase","unfollowUser","decrease","map","length","options","value","label","defaultOption","onChange","setSelectedOption","to"],"sourceRoot":""}